변수의 범위
자바스크립트에서는 객체, 함수 모두 변수(상수)입니다. 변수의 범위란 변수가 접근할 수 있는 변수, 객체 그리고 함수의 집합을 의미합니다.

1. 지역변수
함수 내에서 선언된 변수를 가리킵니다. 지역 변수는 변수가 선언된 함수 내에서만 유효하며, 함수가 종료되면 메모리에서 사라집니다.

function func1(x, y){   // x, y, sum은 지역변수
    let sum = 0;
    ....
    return sum;
}

func1(1, 5); // x, y, sum 변수는 알 수 없음


2. 전역 변수
함수의 외부에서 선언된 변수를 가리킵니다. 전역 변수는 프로그램의 어느 영역에서나 접근할 수 있으며, 웹 페이지가 닫혀야만 메모리에서 사라집니다.

let global = 10;

function func1(x, y){   // x, y, sum은 지역변수
    // 전역 변수는 여기서도 사용할 수 있음
    console.log(global);
    let sum = 0;
    ....
    return sum;
}

// 여기에서도 전역 변수를 사용할 수 있음
console.log(global);


객체(Object)
실생활에서 우리가 인식할 수 있는 사물들을 객체라고 합니다.

프로퍼티(Property)
자바스크립트의 기본 타입은 객체입니다. 객체란 이름과 값으로 구성된 프로퍼티의 정렬되지 않은 집합입니다. 
프로퍼티의 값으로 함수도 올 수 있는데, 이를 프로퍼티 메소드라고 부릅니다.


const dog = {}  // 빈 객체

const dog = {
    name: "루시",
    age: 10,
    color: "white",
    weight: 3.5
    sleep: function(){
        console.lot('잠을 잡니다');
    }
    ...
}



배열과 차이점 
1.인덱스가 있다
2.원래는 타입은 공통되었야 한다
3.크기가 정해져 있다 갯수를 말함



객체를 만드는 방법
1. 리터럴 표기법 "무엇은 무엇입니다"-->한개만 만듬
자바스크립트에서 객체를 만드는 가장 쉬운 방법

const 객체명 = {
    프로퍼티명: 프로퍼티값,
    ...
    ...

}

2. 생성자를 이용한 객체생성  -->여러개를 만듬
new 연산자를 사용하여 객체를 생성하고 초기화할 수 있음. 
이 때 사용되는 메소드를 생성자라고 하며, 이 메소드는 새롭게 생성되는 객체를 초기화하는 역할을 함.

function 생성자명(매개변수1, 매개변수2 ..){
    프로퍼티명 = 값;
    ...
    ...
}
--> 이런식으로 만들겠다는 템플릿

const 객체명1 = new 생성자명(값1, 값2..);  //오브젝트1
const 객체명2 = new 생성자명(값1, 값2..);  //오브젝트2


3. 클래스를 이용한 객체생성(설계도개념)

const 클래스명 = class {
    constructor(매개변수1, 매개변수2 ..){
        프로퍼티명 = 값;
        ...
        ...
    }
    메소드명(매개변수1, 매개변수2 ..){

    }
    ...
}

const 객체명 = new 클래스명(값1, 값2 ..);




프로토타입(prototype)
자바스크립트의 모든 객체는 프로토타입이라는 객체를 포함하고 있습니다. 
모든 객체는 프로토타입으로 부터 프로퍼티와 메소드를 상속받습니다. 
이처럼 자바스크립트의 모든 객체는 최소한 하나 이상의 다른 객체로부터 상속을 받으며 
상속되는 정보를 제공하는 객체를 프로토타입이라고 합니다.

function Dog(){
    ....
}

const Rucy = new Dog(); // Dog.prototype

* 자바스크립트에 내장된 모든 생성자나 사용자 정의 생성자는 
bject.prototype과 자신의 생성자 객체를 프로토타입으로 가집니다.

Rucy  <----------------- Dog.prototype
      <----------------- Object.prototype




